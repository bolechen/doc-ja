<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision$ -->
<!-- EN-Revision: 8b3444158bfc5892e6830648d5429d50bf9f8a2a Maintainer: satoruyoshida Status: ready -->
<!-- CREDITS: hirokawa, shimooka, mumumu -->
<section xml:id="oci8.installation">
 &reftitle.install;


<section xml:id="oci8.configure" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
<title>OCI8 とともに PHP を構成する</title>
 <para>
  OCI8 を構成する前に前述の <link linkend="oci8.requirements">要件</link> 節に
  目を通してください。 
 </para>
 <para>
  Web サーバーを開始する前に、一般的に OCI8 はいくつかの Oracle 環境変数（下記参照）が必要です。
  それらはライブラリの場所を指定したり、構成ファイルを指示したり、
  Oracle ライブラリで使用する文字セットのような基本的ないくつかのプロパティを設定します。
  あらゆる PHP プロセスが開始される <emphasis>前に</emphasis>それらの変数を設定しなければいけません。
 </para>
 <para>
  PHP を構成したのと同じか、またはより最新の Oracle ライブラリのメジャー・バージョンとともに PHP バイナリをリンクしなければいけません。
  例えば Oracle 19 ライブラリで OCI8 をビルドするなら、
  PHP も Oracle 19 ライブラリとともにデプロイして実行すべきです。
  PHP のアプリケーションは、それ以外のバージョンの Oracle データベースにも接続できます。
  Oracle のクライアントとサーバーの間には、異なるバージョン間での互換性があるからです。
 </para>
</section>
<section>
 <title>OCI8 を PECL から(pecl コマンド経由で) インストールする</title>
 <para xmlns:xlink="http://www.w3.org/1999/xlink">
  OCI8 拡張機能は、
  <link xlink:href="&url.pecl.package;oci8">PECL</link> リポジトリを使えば
  既存の PHP のインストールに追加できます。
 </para>
 <para>
  以下の手順で、自動インストールを行えます
 </para>
 <para>
  <itemizedlist>
   <listitem>
    <para>
     ファイアウォールの後ろにいる場合、以下のようにしてプロキシを設定します:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
pear config-set http_proxy http://my-proxy.example.com:80/
]]>
      </screen>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     以下を実行します。
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
pecl install oci8
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     PHP 7 以降では、<literal>pecl install oci8-2.2.0</literal> とします。
    </para>
   </listitem>
   <listitem>
    <para>
     プロンプトが出たら、
     <literal>$ORACLE_HOME</literal> または、
     <literal>instantclient,/path/to/instant/client/lib</literal> を入力して下さい。
    </para>
    <para>
       注意: <literal>$ORACLE_HOME</literal> という値を入力しないで下さい。
       <literal>pecl</literal> はそれを展開しないからです。
       代わりに、展開済みのパスを入力するようにして下さい。
       たとえば、<literal>/opt/oracle/product/19c/dbhome_1</literal>
       や <literal>instantclient,/Users/myname/Downloads/instantclient_19_8</literal> のようなものです。
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>oci8_dtrace_gen.h: No such file or directory</literal> というエラーが発生した場合、
     PHP が <link linkend="features.dtrace">DTrace</link> を有効にしてビルドされているということです。
     この場合、以下のようにしてインストールして下さい:
    </para>
   <para>
    <informalexample>
     <screen>
<![CDATA[
$ export PHP_DTRACE=yes
$ pecl install oci8
]]>
     </screen>
    </informalexample>
   </para>    
   </listitem>   
   <listitem>
    <para>
      &php.ini; ファイルを編集し、以下の一行を追加して下さい。
    </para>
    <para>
      <informalexample>
        <screen>
          <![CDATA[
extension=oci8.so
]]>
        </screen>
      </informalexample>
    </para>
    <para>
      &php.ini; のディレクティブ
      <link linkend="ini.extension-dir">extension_dir</link> が
      <filename>oci8.so</filename> をインストールしたディレクトリを差しているかを確認して下さい。
    </para>
   </listitem>
  </itemizedlist>
 </para>
</section>
<section>
 <title>OCI8 を PECL から(phpize 経由で) インストールする</title>
 <para xmlns:xlink="http://www.w3.org/1999/xlink">
  <literal>pecl</literal> コマンドが利用できない場合に、
  OCI8 を既存の PHP のインストールに追加するには、
  <link xlink:href="&url.pecl.package;oci8">PECL</link> OCI8 パッケージを手動でダウンロードして下さい。
  たとえば、<filename>oci8-3.0.0.tgz</filename> をダウンロードします。
 </para>
 <para>
  <itemizedlist>
   <listitem>
    <para>
     パッケージを展開します:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
tar -zxf oci8-3.0.0.tgz
cd oci8-3.0.0
]]>
      </screen>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     パッケージを準備します:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
phpize
]]>
      </screen>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>$ORACLE_HOME</literal> または
     Instant Client を使ってパッケージを設定します。
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
./configure -with-oci8=shared,$ORACLE_HOME
]]>
      </screen>
     </informalexample>
    </para>
    <para>
      または
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
./configure -with-oci8=shared,instantclient,/path/to/instant/client/lib
]]>
      </screen>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     パッケージをインストールします:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
make install
]]>
      </screen>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     <literal>oci8_dtrace_gen.h: No such file or directory</literal> というエラーが発生した場合、
     PHP が <link linkend="features.dtrace">DTrace</link> を有効にしてビルドされているということです。
     この場合、以下のようにして環境変数を設定してから、
     <literal>configure</literal> と <literal>make</literal> を再実行して下さい。
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
$ export PHP_DTRACE=yes
]]>
     </screen>
    </informalexample>
   </para>    
   </listitem>
   <listitem>
    <para>
      &php.ini; ファイルを編集し、以下の一行を追加して下さい。
    </para>
    <para>
      <informalexample>
        <screen>
<![CDATA[
extension=oci8.so
]]>
        </screen>
      </informalexample>
    </para>
    <para>
      &php.ini; のディレクティブ
      <link linkend="ini.extension-dir">extension_dir</link> が
      <filename>oci8.so</filename> をインストールしたディレクトリを差しているかを確認して下さい。
    </para>
   </listitem>
  </itemizedlist>
 </para>
</section>
<section>
 <title>PHP をビルドする際に、OCI8 を共有ライブラリとしてインストールする</title>
 <para>
  PHP をソースコードからビルドしている場合、
  OCI8 を共有ライブラリとしてビルドするために
  <literal>shared</literal> オプションが使えます。
  これを使うと、PHP に動的にライブラリを読み込ませることが出来ます。
  共有ライブありとしてビルドすると、
  PHP の本体に影響を与えることなく、OCI8 をアップグレードできます。
 </para>
 <para>
  以下のオプションを使って、OCI8 を設定できます。
 </para>
 <para>
  <itemizedlist>
   <listitem>
    <para>
     無料の <link xmlns="http://docbook.org/ns/docbook"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     xlink:href="&url.oracle.instant.client;">Oracle Instant
     Client</link> ライブラリを使っている場合は、以下のようにします:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
./configure --with-oci8=shared,instantclient,/path/to/instant/client/lib
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     Instant Client 12.2 (または前のバージョン)
     が ZIP ファイルからインストールされている場合、
     ライブラリへのシンボリックリンクが作られていることをまず確認して下さい。
     たとえば
     <literal>ln -s
     libclntsh.so.12.1 libclntsh.so</literal> のようにします。
    </para>
    <para>
     RPM を使って Oracle Instant Client をインストールしている場合、
     configure コマンドは、以下のようになるでしょう:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
./configure --with-oci8=shared,instantclient,/usr/lib/oracle/<version>/client/lib
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     <option role="configure">--with-oci8=shared,instantclient,/usr/lib/oracle/19.9/client/lib</option> のようにして、オプションを指定します。
    </para>
    <para>
     注意すべきなのは、PHP ではじめて
     Oracle Instant Client がサポートされたのは PHP 4.3.11 と 5.0.4 で、
     その時は <option role="configure">--with-oci8-instant-client</option>
     というオプションが使われていたということです。
    </para>
   </listitem>
   <listitem>
    <para>
     Oracle Database を使っているか、
     Oracle Client が完全にインストールされている場合は、以下のようにします:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
./configure --with-oci8=shared,$ORACLE_HOME
]]>
      </screen>
     </informalexample>
    </para>
    <para>
     Webサーバのユーザ 
     (<literal>nobody</literal>, <literal>www</literal>)
     が、ライブラリへのアクセス権を持っていることを確認して下さい。
     <literal>$ORACLE_HOME</literal> 内にある初期化ファイルと
     (もし使っていれば) <filename>tnsnames.ora</filename> です。
     Oracle 10<emphasis>g</emphasis>R2 を使っている場合、
     ディレクトリアクセスを与えるために
     <filename>$ORACLE_HOME/install/changePerm.sh</filename>
     を実行する必要があるかもしれません。
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  設定が終わった後は、いつもの PHP のビルドの手続きに従って下さい。
  たとえば <emphasis>make install</emphasis> コマンドの実行です。
  OCI8 の共有ライブラリ <filename>oci8.so</filename> が作成されます。
  このファイルは、PHP の extension
  ディレクトリに手動で移動する必要があるかもしれません。
  このディレクトリは、&php.ini; の
  <link linkend="ini.extension-dir">extension_dir</link> で指定します。
 </para>
 <para>
  OCI8 のインストールを完了するには、
  &php.ini; を編集し、以下の一行を追加します。
 </para>
 <para>
  <informalexample>
   <screen>
<![CDATA[
extension=oci8.so
]]>
   </screen>
  </informalexample>
 </para>
</section>
<section>
 <title>PHP をビルドする際、OCI8 を静的リンクしてインストールする</title>
 <para>
  PHP をソースコードからビルドしている場合、
  以下の configure オプションを使って、
  OCI8 を静的ライブラリとして PHP に含めることが出来ます。
 </para>
 <para>
  <itemizedlist>
   <listitem>
    <para>
     Oracle Instant Client を使っている場合、以下のようにします:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
./configure --with-oci8=instantclient,/path/to/instant/client/lib
]]>
      </screen>
     </informalexample>
    </para>
   </listitem>
   <listitem>
    <para>
     Oracle Database を使っているか、
     Oracle Client が完全にインストールされている場合は、以下のようにします:
    </para>
    <para>
     <informalexample>
      <screen>
<![CDATA[
./configure --with-oci8=$ORACLE_HOME
]]>
      </screen>
     </informalexample>
    </para>
   </listitem>
  </itemizedlist>
 </para>
 <para>
  設定が終わった後は、いつもの PHP のビルドの手続きに従って下さい。
  たとえば <emphasis>make install</emphasis> コマンドの実行です。
  コンパイルが終わった後は、
  <filename>oci8.so</filename> を &php.ini; に追加する必要はありません。
  追加のビルドステップも不要です。
 </para>
</section>
<section>
 <title>Windows で OCI8 をインストールする</title>
 <para xmlns:xlink="http://www.w3.org/1999/xlink">
  OCI8 拡張機能は、
  <link xlink:href="&url.pecl.package;oci8">PECL</link> リポジトリのDLLや、
  インストールされた PHP の <literal>ext</literal> ディレクトリにあるライブラリを使うことで追加出来ます。
 </para>
 <para>
  Oracle 12<emphasis>c</emphasis> (以降) のライブラリを使う場合、
  &php.ini; の
  <literal>extension=php_oci8_12c.dll</literal>,
  <literal>extension=php_oci8_11g.dll</literal>,
  <literal>extension=php_oci8.dll</literal> のいずれかをコメントアウトして下さい。
  これらの DLL のうち、ひとつだけを1度に有効にできます。
  バージョンが上のDLLには、より多くの機能が含まれています。
  必ずしも全てのDLLが、全てのバージョンのPHPで利用できるとは限りません。
  <link linkend="ini.extension-dir">extension_dir</link> 
  が、PHP の拡張機能の DLL を含んだディレクトリを指していることを確認して下さい。
 </para>
 <para>
  もし Instant Client を使用する場合、システムの <envar>PATH</envar>
  環境変数を Oracle ライブラリ・ディレクトリに設定します。
 </para>
</section>
<section>
 <title>Oracle の実行環境を設定する</title>
 <para>
  このエクステンションを使用する前に、 Web デーモンのユーザーのために Oracle の環境変数が
  適切に設定されたか確認してください。
  もし Web サーバーがブート時に自動起動される場合は、ブート時の環境も正しく設定されていることを
  確認してください。
 </para>
 <note>
  <para>
   PHP スクリプトで <function>putenv</function> を使って Oracle の環境変数を
   設定しないでください。それは、スクリプトが実行される前に Oracle のライブラリがロードされて
   初期化されるかもしれないからです。
   <function>putenv</function> で変数を設定すると、コンフリクト、クラッシュ、
   または予測出来ない動作の原因となるかもしれません。
   ある関数は動作し、他の関数は捉えがたいエラーを示すかもしれません。
   Web サーバー開始<emphasis>前</emphasis>に変数を設定するべきです。
  </para>
 </note>
 <para>
  Red Hat Linux と変種では、 <filename>/etc/sysconfig/httpd</filename>
  の最後で変数を export してください。 Apache 2 を伴う他のシステムでは
  Apache <filename>bin</filename> ディレクトリーで <filename>envvars</filename>
  スクリプトを使用するかもしれません。 ３番目のオプション、 <filename>httpd.conf</filename>
  の Apache <literal>SetEnv</literal> ディレクティブは、一部のシステムでは
  動作するかもしれませんが、他のシステムでは不適切であることが知られています。
 </para>
 <para>
  環境変数が正しく設定されたかチェックするには、 <function>phpinfo</function> を使って
  <emphasis>Environment</emphasis> セクション (<emphasis>Apache Environment</emphasis>
  ではありません) に期待される変数が含まれるかどうかチェックしてください。
 </para>
 <para>
  必要かもしれない変数が下記の表に含まれます。
  どんな変数が使えるのかについての詳細は Oracle ドキュメントを参照してください。
  <table>
   <title>一般的な Oracle 環境変数</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>名前</entry>
      <entry>目的</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>ORACLE_HOME</entry>
      <entry>フルの Oracle データベース・ソフトウェアのディレクトリを含みます。
      Oracle Instant Client を使用する際は、これを設定しないでください。
      設定することは余計なことで、インストール時に問題を引き起こすかもしれませんので。
      </entry>
     </row>
     <row>
      <entry>ORACLE_SID</entry>
      <entry>ローカルマシン上の、接続されるデータベース名を含みます。
      Oracle Instant Client を使用するか、または <function>oci_connect</function>
      に常に接続パラメータを渡す場合は、この設定は不要です。
      </entry>
     </row>
     <row>
      <entry>LD_LIBRARY_PATH</entry>
      <entry>
       この値(プラットフォームによっては、
       <literal>LIBPATH</literal> や <literal>SHLIB_PATH</literal>
       の場合があります) を Oracle ライブラリが入っている場所に設定します。
       たとえば <filename>$ORACLE_HOME/lib</filename>
       や <filename>/usr/lib/oracle/18.5/client/lib</filename> などです。
       Linux 用の Instant Client 19 の ZIP ファイルについては、
       <filename>ldconfig</filename> を代わりに使うことで、
       さらに信頼性があがるよになっています。詳細は Instant Client の
       インストール手順書を参照して下さい。
       Instant Client 19 (またはそれ以降) の RPM ファイルでは、 
       <literal>ldconfig</literal> が自動で実行されるようになっています。
       ユーザーによっては、<literal>LD_LIBRARY_PATH</literal> のかわりに
       <literal>LD_PRELOAD</literal> を使うかもしれません。
      </entry>
     </row>
     <row>
      <entry>NLS_LANG</entry>
      <entry>これは Oracle ライブラリで使用される文字セットや
      国際化情報を設定するためのプライマリ変数です。</entry>
     </row>
     <row>
      <entry>ORA_SDTZ</entry>
      <entry>Oracle セッションのタイムゾーンを設定します。</entry>
     </row>
     <row>
      <entry>TNS_ADMIN</entry>
      <entry>
      <filename>tnsnames.ora</filename> や
      <filename>sqlnet.ora</filename> のような
      Oracle Net Service の設定ファイルが置かれたディレクトリを指定します。
      <function>oci_connect</function> に指定する接続文字列が、
      <literal>localhost/XE</literal> のような
      簡易接続の名前付けの文法を使っている場合、この設定は不要です。
      また、ネットワーク設定ファイルがデフォルトの位置に置かれている場合も不要です。
      たとえば、
      <filename>/usr/lib/oracle/VERSION/client/lib/network/admin</filename>,
      <filename>$ORACLE_HOME/network/admin</filename>,
      または <filename>/etc</filename> に置かれている場合です。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
   頻度は高くありませんが、
   <literal>TWO_TASK</literal> 、 <literal>ORA_TZFILE</literal> 、及び
   <literal>NLS*</literal> や <literal>ORA_NLS_*</literal> 変数のような
   様々な Oracle 国際化設定値を含む Oracle 環境変数が使用されます。
 </para>
</section>
<section>
 <title>トラブルシューティング</title>
 <para>
  OCI8 をインストールする際に最も一般的な問題は、 Oracle 環境が
  正しく設定されないことです。通常、これは <function>oci_connect</function>
  や <function>oci_pconnect</function> 使用上の問題として現れます。
  このエラーは <emphasis>Call to undefined function oci_connect()</emphasis>
  のような PHP エラーや、 ORA-12705 のような Oracle エラー、さらには
  Apache のクラッシュになるかもしれません。
  この問題を解決するために、起動時のエラーについて Apache のログファイルをチェックして、
  上記のセクションをご覧下さい。
 </para>
 <para>
  ORA-12154 または ORA-12514 のようなネットワークエラーは
  Oracle のネットワーク・ネーミングまたは構成の問題を示唆する反面、
  根本の原因は、 PHP 環境が誤って設定されたことや、 Oracle ライブラリが
  <filename>tnsnames.ora</filename> 構成ファイルの場所を指定できないためかもしれません。
 </para>
 <para>
  Windows では、一つのマシン上に Oracle の複数のバージョンを持つと、
  PHP が Oracle の正しいバージョンだけを使用することを確認するために注意を払わない限り、
  すぐにライブラリのクラッシュを引き起こします。
 </para>
 <para>
  特に Windows 上では、どのライブラリが検索されてロードされるか調べるユーティリティは、
  欠けていたりクラッシュしているライブラリの問題の解決に役立ちます。
 </para>
 <note>
  <title>Web サーバーが開始しないか、または起動時にクラッシュする場合</title>
  <para>
   Apache が pthread ライブラリとリンクされていることをチェックします。
  </para>
  <para>
   <informalexample>
    <screen>
<![CDATA[
# ldd /www/apache/bin/httpd
  libpthread.so.0 => /lib/libpthread.so.0 (0x4001c000)
  libm.so.6 => /lib/libm.so.6 (0x4002f000)
  libcrypt.so.1 => /lib/libcrypt.so.1 (0x4004c000)
  libdl.so.2 => /lib/libdl.so.2 (0x4007a000)
  libc.so.6 => /lib/libc.so.6 (0x4007e000)
  /lib/ld-linux.so.2 => /lib/ld-linux.so.2 (0x40000000)
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   libpthread が一覧に表示されなければ、 Apache を再インストールします。
  </para>
  <para>
   <informalexample>
    <screen>
<![CDATA[
# cd /usr/src/apache_1.3.xx
# make clean
# LIBS=-lpthread ./config.status
# make
# make install
]]>
    </screen>
   </informalexample>
  </para>
  <para>
   UnixWare のような一部のシステムでは、それは
   libpthread の代わりに libthread であることに注意してください。
   PHP 及び Apache を EXTRA_LIBS=-lthread とともに構成しなければいけません。
  </para>
 </note>
</section>


</section> <!-- oci8.installation -->
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

