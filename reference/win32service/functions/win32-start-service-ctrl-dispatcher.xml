<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 4d72f13eaf9e06715ae68eac72aa3fd6ae83eb78 Maintainer: takagi Status: ready -->
<!-- Generated by xml_proto.php v2.3. Found in /scripts directory of phpdoc. -->
<!-- Credits: mumumu -->
<refentry xml:id="function.win32-start-service-ctrl-dispatcher" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>win32_start_service_ctrl_dispatcher</refname>
  <refpurpose>
   スクリプトを SCM に登録し、指定した名前でサービスとして稼動させる
   ようにする
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>void</type><methodname>win32_start_service_ctrl_dispatcher</methodname>
   <methodparam><type>string</type><parameter>name</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>gracefulMode</parameter><initializer>true</initializer></methodparam>
  </methodsynopsis>

  <para>
   サービスコントロールマネージャ経由で起動させる際、サービスプロセスは
   「チェックイン」を要求され、これによってサービスのモニタリングや
   通信の機能を確立します。この関数は、サービスコントロールマネージャとの
   低レベル通信を処理するスレッドを生成し、チェックインを実行します。
  </para>
  <para>
   サービスが開始したら、サービスプロセスで行わなければならないことは次のふたつです。
   まず最初は、サービスが実行中であることをサービスコントロールマネージャに通知することです。
   これは、<function>win32_set_service_status</function> に定数
   <constant>WIN32_SERVICE_RUNNING</constant> を指定してコールすれば実現できます。
   サービスが実際に動き出すまでに何らかの長い処理を要する場合は、定数
   <constant>WIN32_SERVICE_START_PENDING</constant> を使うこともできます。
   もうひとつは、常にサービスコントロールマネージャにチェックインし続け、
   サービスをいつ終了させるべきかを確認することです。
   これは、定期的に <function>win32_get_last_control_message</function>
   をコールして返り値を適切に処理することで実現できます。
  </para>

  <caution>
   <para>
    0.2.0 以降では、この関数は "cli" SAPI でのみ動作します。
    他の SAPI では、この関数は無効になっています。
   </para>
  </caution>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       サービスの短い名前。<function>win32_create_service</function>
       で登録されたもの。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>gracefulMode</parameter></term>
     <listitem>
      <para>
       &true; の場合、graceful に終了します。
       &false; の場合、エラーで終了します。
       詳細は <function>win32_set_service_exit_mode</function> を参照してください。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
  <para>
    バージョン 1.0.0 より前では、&win32service.noerror.false.error;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   バージョン 1.0.0 より前では、
   SAPI が <literal>"cli"</literal> でない場合、
   この関数は <constant>E_ERROR</constant> レベルのエラーを発生させていました。
  </para>
  <para>
   バージョン 1.0.0 以降では、
   SAPI が <literal>"cli"</literal> でない場合、
   <classname>Win32ServiceException</classname> がスローされます。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        引数に不正な値があった場合、
        <classname>ValueError</classname> をスローするようになりました。
        これより前のバージョンでは、&false; を返していました。
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        エラー時に
        <classname>Win32ServiceException</classname> をスローするようになりました。
        これより前のバージョンでは、
        <link xmlns="http://docbook.org/ns/docbook" linkend="win32service.constants.errors">Win32 エラーコード</link> を返していました。
       </entry>
      </row>
      <row>
       <entry>PECL win32service 1.0.0</entry>
       <entry>
        返り値の型が <type>void</type> になりました。
        これより前のバージョンでは、<type>mixed</type> でした。
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.4.0</entry>
       <entry>
        <parameter>gracefulMode</parameter> パラメータが追加されました。
       </entry>
      </row>
      <row>
       <entry>PECL win32service 0.2.0</entry>
       <entry>
        この関数は <literal>"cli"</literal> SAPI でのみ動作するようになりました。
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>win32_start_service_ctrl_dispatcher</function> の例</title>
    <para>
     サービスが SCM で実行されているかどうかを調べます。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if (!win32_start_service_ctrl_dispatcher('dummyphp')) {
  die("I'm probably not running under the service control manager");
}

win32_set_service_status(WIN32_SERVICE_START_PENDING);

// このサービスを処理するための、何らかの長い処理をします

win32_set_service_status(WIN32_SERVICE_RUNNING);

while (WIN32_SERVICE_CONTROL_STOP != win32_get_last_control_message()) {
  # ここでなんらかの処理をします。1 回のループに 30 秒以上かからない
  # ように心がけてください。
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>win32_set_service_status</function></member>
    <member><function>win32_get_last_control_message</function></member>
    <member><function>win32_set_service_exit_mode</function></member>
    <member><function>win32_set_service_exit_code</function></member>
    <member><link linkend="win32service.constants.errors">Win32 エラーコード</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
