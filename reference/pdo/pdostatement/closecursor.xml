<?xml version="1.0" encoding="utf-8" ?>
<!-- $Revision$ -->
<!-- EN-Revision: 3d69f8f11fcade2ce4fd908d176cbf874603fe57 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="pdostatement.closecursor" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDOStatement::closeCursor</refname>
  <refpurpose>
   カーソルを閉じてステートメントを再実行できるようにする
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PDOStatement::closeCursor</methodname>
   <void/>
  </methodsynopsis>

  <para>
   <function>PDOStatement::closeCursor</function> は、
   他の SQL ステートメントを発行できるようにサーバーへの接続を解放しますが、
   ステートメントは再実行可能な状態のまま残されます。
  </para>
  <para>
   このメソッドは以前に実行された PDOStatement
   オブジェクトが行をまだフェッチしていない場合に PDOStatement
   オブジェクトの実行をサポートしていないデータベースドライバに対して有用です。
   もし使用しているデータベースドライバがこの制限を受ける場合、
   out-of-sequence エラーが出力されます。
  </para>
  <para>
   <function>PDOStatement::closeCursor</function> は、
   オプションのドライバ固有のメソッド (最大の効率を得るため)
   もしくはドライバ固有の関数がインストールされていない場合の汎用的な
   PDO フォールバックとして実装されています。
   汎用的な PDO フォールバックは、PHP
   スクリプト中に以下のようなコードを書くことと意味的に等価です。
   <programlisting role="php">
<![CDATA[
<?php
do {
    while ($stmt->fetch())
        ;
    if (!$stmt->nextRowset())
        break;
} while (true);
?>
]]>
   </programlisting>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>PDOStatement::closeCursor</function> の例</title>
    <para>
     以下の例では、PDOStatement オブジェクト <varname>$stmt</varname>
     は複数の行を返しますが、このアプリケーションは先頭行のみフェッチし、
     PDOStatement オブジェクトをフェッチしていない行がある状態のままにします。
     このアプリケーションがが全てのデータベースドライバで動作するよう、
     PDOStatement オブジェクト <varname>$otherStmt</varname> を実行する前に
     <varname>$stmt</varname> に対して
     <function>PDOStatement::closeCursor</function>
     の呼び出しを挿入しています。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* PDOStatement オブジェクトを生成する */
$stmt = $dbh->prepare('SELECT foo FROM bar');

/* 第二の PDOStatement オブジェクトを生成する */
$otherStmt = $dbh->prepare('SELECT foobaz FROM foobar');

/* 最初の文を実行する */
$stmt->execute();

/* 結果から先頭行のみフェッチする */
$stmt->fetch();

/* 続く closeCursor() のコールはいくつかのドライバでは必要となる */
$stmt->closeCursor();

/* ここで第二の文を実行することができる */
$otherStmt->execute();
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDOStatement::execute</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
