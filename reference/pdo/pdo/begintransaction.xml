<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 3d69f8f11fcade2ce4fd908d176cbf874603fe57 Maintainer: takagi Status: ready -->
<!-- CREDITS: shimooka -->
<refentry xml:id="pdo.begintransaction" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::beginTransaction</refname>
  <refpurpose>
   トランザクションを開始する
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>bool</type><methodname>PDO::beginTransaction</methodname>
   <void/>
  </methodsynopsis>
  <para>
   オートコミットモードをオフにします。オートコミットモードがオフの間、
   PDO オブジェクトを通じてデータベースに加えた変更は
   <function>PDO::commit</function> をコールするまでコミットされません。
   <function>PDO::rollBack</function> をコールすると、
   データベースへの全ての変更をロールバックし、
   オートコミットモードに設定された接続を返します。
  </para>
  <para>
   MySQL を含むいくつかのデータベースでは、DROP TABLE や CREATE TABLE
   のようなデータベース定義言語 (DDL) ステートメントがトランザクション中に
   発行される場合、暗黙的なコミットが自動的に発行されます。
   この暗黙的なコミットにより、そのトランザクション境界で
   他のあらゆる変更をロールバックすることができなくなるでしょう。
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   トランザクションが既に開始されている場合や、ドライバがトランザクションに対応していない場合に
   <classname>PDOException</classname> をスローします。
  </para>
  &pdo.errors.exception-not-errmode;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example><title>トランザクションをロールバックする</title>
    <para>
     以下の例は、トランザクションを開始し、
     変更をロールバックする前にデータベースを修正する
     2 つのステートメントを発行します。
     しかしながら MySQL では、DROP TABLE ステートメントは
     自動的にトランザクションをコミットするので、
     トランザクション中のどの変更もロールバックされません。
    </para>
    <programlisting role="php">
<![CDATA[
<?php
/* トランザクションを開始する。オートコミットがオフになる */
$dbh->beginTransaction();

/* データベーススキーマとデータを変更する */
$sth = $dbh->exec("DROP TABLE fruit");
$sth = $dbh->exec("UPDATE dessert
    SET name = 'hamburger'");

/* ミスに気づき、変更をロールバックする */
$dbh->rollBack();

/* データベース接続はオートコミットモードに戻る */
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>PDO::commit</function></member>
    <member><function>PDO::rollBack</function></member>
    <member><link linkend="pdo.transactions">トランザクションおよび自動コミット</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
