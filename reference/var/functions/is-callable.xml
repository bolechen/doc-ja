<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 83a17a7324c2597bd6385148abf19f76127229f5 Maintainer: takagi Status: ready -->
<!-- CREDITS: hirokawa,mumumu -->
<refentry xml:id="function.is-callable" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_callable</refname>
  <refpurpose>
   引数が、現在のスコープから関数としてコール可能な値かどうかを調べる
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_callable</methodname>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>syntax_only</parameter><initializer>&false;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter role="reference">callable_name</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   引数の内容が、<type>callable</type> かどうかを調べます。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       チェックする値。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>syntax_only</parameter></term>
     <listitem>
      <para>
       &true; の場合、この関数は単に <parameter>value</parameter>
       が関数またはメソッドであるかどうかだけを調べます。
       文字列以外の型の変数や不正な形式の配列は、
       引数として受け付けられません。有効な配列の形式は、
       最初のエントリがオブジェクトあるいは文字列で、2 番目のエントリが文字列である
       2 つのエントリからなるものです。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>callable_name</parameter></term>
     <listitem>
      <para>
       "呼び出し名" を受け取ります。下の例では "someClass::someMethod"
       です。これは someClass::SomeMethod() が static メソッドであるかのようにみえますが、
       そうではないことに注意しましょう。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>value</parameter> がコール可能な場合に &true;、
   それ以外の場合に &false; を返します。
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>is_callable</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
//  変数が、関数としてコール可能かどうかを確かめます。

//
//  関数名を含む単純な配列
//

function someFunction() 
{
}

$functionVariable = 'someFunction';

var_dump(is_callable($functionVariable, false, $callable_name));  // bool(true)

echo $callable_name, "\n";  // someFunction

//
//  メソッドを含む配列
//

class someClass {

  function someMethod() 
  {
  }

}

$anObject = new someClass();

$methodVariable = array($anObject, 'someMethod');

var_dump(is_callable($methodVariable, true, $callable_name));  //  bool(true)

echo $callable_name, "\n";  //  someClass::someMethod

?>
]]>
    </programlisting>
   </example>   
   <example>
    <title><function>is_callable</function> とコンストラクタ</title>
    <simpara>
     <function>is_callable</function>
     はコンストラクタを callable だとはみなしません。
    </simpara>
    <programlisting role="php">
<![CDATA[
<?php

class Foo
{
    public function __construct() {}
    public function foo() {}
}

var_dump(
    is_callable(array('Foo', '__construct')),
    is_callable(array('Foo', 'foo'))
);
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
bool(false)
bool(false)
]]>
    </screen>
   </example>
  </para>   
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <simplelist>
   <member>
    オブジェクトは、
    <link linkend="object.invoke">__invoke()</link>
    を実装していれば常にコール可能ですし、
    そのメソッドは現在のスコープからアクセス可能です。
   </member>
   <member>
    <link linkend="object.callstatic">__callStatic()</link>
    を実装したクラスの場合、そのクラス名はコール可能です。
   </member>
   <member>
    <link linkend="object.call">__call()</link>
    を実装しているオブジェクトが存在する場合、
    この関数は、そのオブジェクトのあらゆるメソッドに対して &true; を返します。
    たとえそのメソッドが定義されていなくてもです。
   </member>
   <member>
    この関数を、クラス名を指定してコールすると、
    オートローディングが行われる可能性があります。
   </member>
  </simplelist>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>function_exists</function></member>
    <member><function>method_exists</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
