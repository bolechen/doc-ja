<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d91e36266dddbe570789dbe218e5672fc0b85089 Maintainer: hirokawa Status: ready -->
<!-- Credits: mumumu -->
<refentry xml:id="function.mdecrypt-generic" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mdecrypt_generic</refname>
  <refpurpose>データを復号する</refpurpose>
 </refnamediv>
 <refsynopsisdiv>
  &warn.deprecated.function-7-1-0.removed-7-2-0;
 </refsynopsisdiv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>mdecrypt_generic</methodname>
   <methodparam><type>resource</type><parameter>td</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   この関数は、データを復号します。データのパディングが行われるため、
   返される文字列の長さは暗号化前の文字列よりも長くなる可能性があることに
   注意してください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>td</parameter></term>
     <listitem>
      <para>
       <function>mcrypt_module_open</function> が返す暗号化記述子。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       暗号化されたデータ。
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Returns decrypted string.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mdecrypt_generic</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
    /* データ */
    $key = 'this is a very long key, even too long for the cipher';
    $plain_text = 'very important data';

    /* モジュールをオープンし、IV を作成します */ 
    $td = mcrypt_module_open('des', '', 'ecb', '');
    $key = substr($key, 0, mcrypt_enc_get_key_size($td));
    $iv_size = mcrypt_enc_get_iv_size($td);
    $iv = mcrypt_create_iv($iv_size, MCRYPT_RAND);

    /* 暗号化ハンドルを初期化します */
    if (mcrypt_generic_init($td, $key, $iv) != -1) {

        /* データを暗号化します */
        $c_t = mcrypt_generic($td, $plain_text);
        mcrypt_generic_deinit($td);

        /* 復号のため、バッファを再度初期化します */
        mcrypt_generic_init($td, $key, $iv);
        $p_t = mdecrypt_generic($td, $c_t);

        /* 後始末をします */
        mcrypt_generic_deinit($td);
        mcrypt_module_close($td);
    }

    if (strncmp($p_t, $plain_text, strlen($plain_text)) == 0) {
        echo "ok\n";
    } else {
        echo "error\n";
    }
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   上記の例は、暗号化前のデータと復号したデータと同じであるかどうかを
   調べる方法を示すものです。データを復号する前に
   <function>mcrypt_generic_init</function> で暗号化バッファを再度
   初期化しておくことが重要です。
  </para>
  <para>
   この関数をコールする前に、常に
   <function>mcrypt_generic_init</function> でキーと IV を使用して
   復号ハンドルを初期化しておくべきです。暗号化が終了した際には
   <function>mcrypt_generic_deinit</function> をコールして暗号化
   バッファを開放すべきです。
   <function>mcrypt_module_open</function> の例を参照ください。
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mcrypt_generic</function></member>
    <member><function>mcrypt_generic_init</function></member>
    <member><function>mcrypt_generic_deinit</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
