<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8a7c2e03689cc5edf0dfb6710c9d3fe0b450849f Maintainer: hirokawa Status: ready -->
<!-- CREDITS: shimooka,mumumu -->

<refentry xml:id="function.count" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>count</refname>
  <refpurpose>変数に含まれるすべての要素、
  あるいはオブジェクトに含まれる何かの数を数える</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>count</methodname>
   <methodparam><type class="union"><type>Countable</type><type>array</type></type><parameter>value</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer><constant>COUNT_NORMAL</constant></initializer></methodparam>
  </methodsynopsis>
  <para>
   変数に含まれるすべての要素、
   あるいはオブジェクトに含まれる何かの数を数えます。
  </para>
  <para>
   オブジェクトに対して、もし <link linkend="ref.spl">SPL</link>
   がインストールされている場合、インターフェイス
   <classname>Countable</classname> を実装することで <function>count</function>
   にフックすることができます。このインターフェイスには 1 つのメソッド
   <methodname>Countable::count</methodname> があり、<function>count</function>
   関数に対する値を返します。
  </para>
  <para>
   配列の実装やPHPでの使用法に関する詳細な説明については、マニュアルの
   <link linkend="language.types.array">配列</link>のセクションを参照ください。
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       配列あるいは <classname>Countable</classname> オブジェクト。
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       オプションの<parameter>mode</parameter> 引数が <constant>COUNT_RECURSIVE</constant>
       (または 1) にセットされた場合、<function>count</function>
       は再帰的に配列をカウントします。
       これは多次元配列の全ての要素をカウントするといった場合に特に有効です。
      </para>
      <caution>
       <para>
        <function>count</function> は、再帰を検出して無限ループを回避するようになっています。
        しかしその場合 (配列の中に自分自身が複数回登場する場合) は毎回 <constant>E_WARNING</constant>
        を発行し、期待する結果より大きい数を返します。
       </para>
      </caution>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>value</parameter> に含まれる要素の数を返します。
   もしパラメータが配列でもなく <classname>Countable</classname> インターフェイスを
   実装したオブジェクトでもない場合、<literal>1</literal> が返されます。
   ひとつ例外があり、<parameter>value</parameter> が &null; の場合、
   <literal>0</literal> が返されます。
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>value</parameter> パラメータに不正な型を渡した場合に、
       <classname>TypeError</classname> をスローするようになりました。
      </entry>
     </row>
     <row>
      <entry>7.2.0</entry>
      <entry>
       <parameter>value</parameter> パラメータに不正な型を渡した場合に、
       警告を発生させるようになりました。
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>count</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$a[0] = 1;
$a[1] = 3;
$a[2] = 5;
var_dump(count($a));

$b[0]  = 7;
$b[5]  = 9;
$b[10] = 11;
var_dump(count($b));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
int(3)
int(3)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>Countable|array でない値を渡した場合の <function>count</function>  の例 (悪い例です - 真似しないでね！)</title>
    <programlisting role="php">
<![CDATA[
<?php
$b[0]  = 7;
$b[5]  = 9;
$b[10] = 11;
var_dump(count($b));

var_dump(count(null));

var_dump(count(false));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
int(3)
int(0)
int(1)
]]>
    </screen>
    &example.outputs.72;
    <screen role="php">
<![CDATA[
int(3)

Warning: count(): Parameter must be an array or an object that implements Countable in … on line 12
int(0)

Warning: count(): Parameter must be an array or an object that implements Countable in … on line 14
int(1)
]]>
    </screen>
    &example.outputs.8;
    <screen role="php">
<![CDATA[
int(3)

Fatal error: Uncaught TypeError: count(): Argument #1 ($var) must be of type Countable .. on line 12
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title>再帰的な <function>count</function> の例</title>
    <programlisting role="php">
<![CDATA[
<?php
$food = array('fruits' => array('orange', 'banana', 'apple'),
              'veggie' => array('carrot', 'collard', 'pea'));

// 再帰的なカウント
echo count($food, COUNT_RECURSIVE); // output 8

// 通常のカウント
echo count($food); // output 2

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_array</function></member>
    <member><function>isset</function></member>
    <member><function>empty</function></member>
    <member><function>strlen</function></member>
    <member><function>is_countable</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
